@model CompositionViewModel
@{
    ViewData["Title"] = Model.Composition.Name;
}

<div class="container mt-5">
    <div class="card">
        <div class="card-header">
            <h5 class="card-title">Название: <span class="font-weight-bold">@Model.Composition.Name</span></h5>
        </div>
        <div class="card-body d-flex">
            <div class="form-group pr-4">
                <img src="~/@Model.Composition.ImagePath" alt="О@Model.Composition.Name" class="img-fluid">
            </div>
            <div class="form-group">
                <label class="form-control" for="author">Автор: @Model.Composition.Author.Email</label>
                <label class="form-control">Рейтинг: @Model.Composition.Rating</label>
                <label class="form-control">Жанр: @Model.Composition.Genre.Name</label>
                <label class="form-control">Описание: @Model.Composition.Description</label>
                <label class="form-control">Дата создания: @Model.Composition.CreateDate</label>
             </div>
        </div>
        <div class="text-center mb-3">
            <a class="btn btn-warning w-25" href="~/@Model.Composition.Path">Читать</a>
        </div>
    </div>
    <a class="btn btn-warning" asp-action="List">К произведениям</a>
</div>

<div class="container mt-5 center-block">
    <div>
        <form asp-action="Create" asp-controller="Comment" method="post">
            <input type="hidden" name="authorId" value=@Model.AuthorId />
            <input type="hidden" name="compositionId" value=@Model.Composition.Id />


            <label class="mb-1" for="text">Ваш отзыв</label>
            <textarea name="text" type="text" class="form-control mb-3" min="1" max="499" required></textarea>

            <label class="mb-1" for="rating">Оценка</label>
            <input name="rating" type="number" class="form-control mb-3 w-25" min="1" max="100" required />

            <div class="w-25">
                <button type="submit" class="mb-3 w-100 btn btn-lg btn-primary">Оставить отзыв</button>
            </div>
        </form>
        <div class="mt-4">
            @if (Model.Comments != null && Model.Comments.Any())
            {
                foreach (var comment in Model.Comments)
                {
                    <div class="border border-4 p-2 mb-3">
                        <h2 class="form-control">@comment.Author.Email</h2>
                        <p class="form-control w-25">Оценка: @comment.Rating</p>
                        <p class="form-control">@comment.Text</p>
                        @if (User.IsInRole("Admin"))
                        {
                            <a id="delete-btn" class="btn btn-sm btn-danger" onclick="confirmDeleteComment(@comment.Id)">Удалить</a>
                        }
                    </div>
                }
            }
        </div>
</div>



<script type="text/javascript">
    document.getElementById("delete-btn").addEventListener("click", deleteComposition);

    async function confirmDeleteComment(id) {
        if (confirm('Вы уверены, что хотите удалить комментарий?')) {
            await deleteComment(id);
        }
    }

    async function deleteComment(id) {
        try {
            await fetch(`Comment/` + id, {
                method: "DELETE",
                headers: { "Accept": "application/json", "Content-Type": "application/json" }
            });
            window.location.href = '/';
        } catch (error) {
            console.log(error);
            alert('Произошла ошибка при удалении');
        }
    }
</script>
